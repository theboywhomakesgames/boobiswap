{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exchangeBank",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initial_pool",
          "type": "uint256"
        }
      ],
      "name": "createExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_address",
          "type": "address"
        }
      ],
      "name": "get_token_exchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initial_pool\",\"type\":\"uint256\"}],\"name\":\"createExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeBank\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"get_token_exchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Exchange.sol\":{\"keccak256\":\"0x4d08a238c9073cb9ee94bad38c57ce2021a30f369e9d4ac8a86619f117ee2127\",\"urls\":[\"bzz-raw://a7ad572017ef33ec7957cb7e19224837a6badae6bbd628181afc261e7a1e4a49\",\"dweb:/ipfs/QmQDqYJdnQcLcnvStX9mBgSPNnvEotTwkbZAc5MyGGknNL\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0xc0cc7cdb12fe89579fd295fb75517bca7a7b4f9fd434e61d4e7ff68094f10bd1\",\"urls\":[\"bzz-raw://e06b43625b1a99e30b48a6281149a2e8a50162b6b4adca05491aae396b534840\",\"dweb:/ipfs/QmTcj5az4VhtmivmVejZSQa5vQTLYxnDbPAHC57gEUGqeb\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063433c817c14610044578063b2dd5c0714610074578063d66f7e2c146100b1578063e1ac499f146100ee575b600080fd5b61005e600480360381019061005991906105cc565b61012b565b60405161006b91906106b9565b60405180910390f35b34801561008057600080fd5b5061009b600480360381019061009691906105a3565b610440565b6040516100a8919061070b565b60405180910390f35b3480156100bd57600080fd5b506100d860048036038101906100d391906105a3565b610460565b6040516100e591906106b9565b60405180910390f35b3480156100fa57600080fd5b50610115600480360381019061011091906105a3565b610493565b60405161012291906106b9565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101e557600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061043a565b60008390506000846040516101f990610557565b61020391906106b9565b604051809103906000f08015801561021f573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3383876040518463ffffffff1660e01b815260040161025f939291906106d4565b602060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b19190610608565b5060008173ffffffffffffffffffffffffffffffffffffffff16346040516102d8906106a4565b60006040518083038185875af1925050503d8060008114610315576040519150601f19603f3d011682016040523d82523d6000602084013e61031a565b606091505b505090508061035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610726565b60405180910390fd5b81600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508193505050505b92915050565b60006020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561054d57600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610552565b600080fd5b919050565b610c208061081c83390190565b600081359050610573816107d6565b92915050565b600081519050610588816107ed565b92915050565b60008135905061059d81610804565b92915050565b6000602082840312156105b557600080fd5b60006105c384828501610564565b91505092915050565b600080604083850312156105df57600080fd5b60006105ed85828601610564565b92505060206105fe8582860161058e565b9150509250929050565b60006020828403121561061a57600080fd5b600061062884828501610579565b91505092915050565b61063a81610762565b82525050565b61064981610774565b82525050565b600061065c600e83610751565b9150610667826107aa565b602082019050919050565b600061067f600083610746565b915061068a826107d3565b600082019050919050565b61069e816107a0565b82525050565b60006106af82610672565b9150819050919050565b60006020820190506106ce6000830184610631565b92915050565b60006060820190506106e96000830186610631565b6106f66020830185610631565b6107036040830184610695565b949350505050565b60006020820190506107206000830184610640565b92915050565b6000602082019050818103600083015261073f8161064f565b9050919050565b600081905092915050565b600082825260208201905092915050565b600061076d82610780565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f65727220706179696e6720657468000000000000000000000000000000000000600082015250565b50565b6107df81610762565b81146107ea57600080fd5b50565b6107f681610774565b811461080157600080fd5b50565b61080d816107a0565b811461081857600080fd5b5056fe6080604052604051610c20380380610c20833981810160405281019061002591906100e4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610156565b6000815190506100de8161013f565b92915050565b6000602082840312156100f657600080fd5b6000610104848285016100cf565b91505092915050565b60006101188261011f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101488161010d565b811461015357600080fd5b50565b610abb806101656000396000f3fe60806040526004361061007f5760003560e01c8063c703caf31161004e578063c703caf314610135578063d206330f14610160578063d46e88991461018b578063fc0c546a1461019557610086565b8063056ef2491461008b5780631dcdcbbe146100b657806345f064f6146100e15780638c8e8fee1461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101c0565b6040516100ad919061085d565b60405180910390f35b3480156100c257600080fd5b506100cb6101c6565b6040516100d8919061085d565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610748565b6101ce565b005b34801561011657600080fd5b5061011f6103fa565b60405161012c91906107c7565b60405180910390f35b34801561014157600080fd5b5061014a610420565b604051610157919061085d565b60405180910390f35b34801561016c57600080fd5b50610175610426565b604051610182919061085d565b60405180910390f35b6101936104d8565b005b3480156101a157600080fd5b506101aa6106ba565b6040516101b79190610842565b60405180910390f35b60005481565b600047905090565b47600081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161023091906107c7565b60206040518083038186803b15801561024857600080fd5b505afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610771565b60018190555060006101f48261029691906108ce565b905060006001546000546102aa91906108ff565b90506000836001546102bc9190610878565b9050600083826102cc9190610959565b836102d791906108ce565b90506000816000546102e99190610959565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161034a939291906107e2565b602060405180830381600087803b15801561036457600080fd5b505af1158015610378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039c919061071f565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103e3573d6000803e3d6000fd5b508260018190555081600081905550505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161048391906107c7565b60206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610771565b905090565b47600081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053a91906107c7565b60206040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190610771565b60018190555060006101f4346105a091906108ce565b905060006001546000546105b491906108ff565b90506000346000546105c69190610878565b9050600083826105d69190610959565b836105e191906108ce565b90506000816001546105f39190610959565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610652929190610819565b602060405180830381600087803b15801561066c57600080fd5b505af1158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a4919061071f565b5081600181905550826000819055505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506106ef81610a57565b92915050565b60008135905061070481610a6e565b92915050565b60008151905061071981610a6e565b92915050565b60006020828403121561073157600080fd5b600061073f848285016106e0565b91505092915050565b60006020828403121561075a57600080fd5b6000610768848285016106f5565b91505092915050565b60006020828403121561078357600080fd5b60006107918482850161070a565b91505092915050565b6107a38161098d565b82525050565b6107b2816109d5565b82525050565b6107c1816109cb565b82525050565b60006020820190506107dc600083018461079a565b92915050565b60006060820190506107f7600083018661079a565b610804602083018561079a565b61081160408301846107b8565b949350505050565b600060408201905061082e600083018561079a565b61083b60208301846107b8565b9392505050565b600060208201905061085760008301846107a9565b92915050565b600060208201905061087260008301846107b8565b92915050565b6000610883826109cb565b915061088e836109cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108c3576108c26109f9565b5b828201905092915050565b60006108d9826109cb565b91506108e4836109cb565b9250826108f4576108f3610a28565b5b828204905092915050565b600061090a826109cb565b9150610915836109cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561094e5761094d6109f9565b5b828202905092915050565b6000610964826109cb565b915061096f836109cb565b925082821015610982576109816109f9565b5b828203905092915050565b6000610998826109ab565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109e0826109e7565b9050919050565b60006109f2826109ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610a608161099f565b8114610a6b57600080fd5b50565b610a77816109cb565b8114610a8257600080fd5b5056fea26469706673582212203b611007f4c1e59d0fa1d8c3e680d3525d54c4df45a1bf5d61e0ce29bf18c2ca64736f6c63430008040033a26469706673582212205a1d29bd985f1671d01e76229c83500d96a825585a30d8520400cce06010bad764736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5652:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:6",
                "type": ""
              }
            ],
            "src": "152:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:6",
                "type": ""
              }
            ],
            "src": "295:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "564:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "554:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "554:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "527:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "536:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "523:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "523:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "519:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "516:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "578:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "593:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "607:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "597:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "622:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "657:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "668:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "653:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "653:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "677:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "632:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "622:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "476:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "487:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:6",
                "type": ""
              }
            ],
            "src": "440:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "791:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "837:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "846:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "849:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "839:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "839:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "812:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "821:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "808:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "808:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "804:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "804:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "801:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "863:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "878:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "892:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "882:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "907:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "942:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "953:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "938:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "938:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "962:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "917:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "907:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "990:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1005:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1019:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1009:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1035:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1070:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1081:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1066:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1066:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1090:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1045:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1045:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1035:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "753:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "764:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "776:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "784:6:6",
                "type": ""
              }
            ],
            "src": "708:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1195:204:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1241:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1250:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1253:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1243:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1243:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1243:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1216:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1225:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1212:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1212:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1208:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1205:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1267:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1282:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1296:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1286:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1311:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1354:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1365:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1350:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1350:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1374:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1321:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1321:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1311:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1165:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1176:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1188:6:6",
                "type": ""
              }
            ],
            "src": "1121:278:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1470:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1487:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1510:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1492:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1492:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1480:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1480:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1458:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1465:3:6",
                "type": ""
              }
            ],
            "src": "1405:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1588:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1605:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1625:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1610:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1610:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1598:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1598:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1598:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1583:3:6",
                "type": ""
              }
            ],
            "src": "1529:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1800:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1866:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1871:2:6",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1807:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1800:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1972:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79",
                      "nodeType": "YulIdentifier",
                      "src": "1883:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1883:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1996:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2001:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1992:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1985:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1778:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1786:3:6",
                "type": ""
              }
            ],
            "src": "1644:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2179:235:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2189:90:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2272:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2277:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2196:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:83:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2189:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2377:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "2288:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2288:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2390:18:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2401:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2397:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:11:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2390:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2167:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2175:3:6",
                "type": ""
              }
            ],
            "src": "2016:398:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2485:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2502:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2525:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2507:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2507:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2495:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2473:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2480:3:6",
                "type": ""
              }
            ],
            "src": "2420:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2732:191:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2743:154:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2893:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2750:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:147:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2743:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2907:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2914:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2907:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2719:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2728:3:6",
                "type": ""
              }
            ],
            "src": "2544:379:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3027:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3037:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3049:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3060:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3045:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3045:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3037:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3117:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3130:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3141:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3126:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3126:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3073:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3073:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2999:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3011:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3022:4:6",
                "type": ""
              }
            ],
            "src": "2929:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3311:288:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3321:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3333:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3344:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3329:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3329:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3321:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3401:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3414:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3425:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3410:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3410:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3357:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3357:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3357:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3482:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3495:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3506:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3438:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3438:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3438:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3564:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3577:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3588:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3573:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3573:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3520:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3520:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3520:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3267:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3279:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3287:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3295:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3306:4:6",
                "type": ""
              }
            ],
            "src": "3157:442:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3697:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3707:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3719:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3730:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3715:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3715:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3707:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3781:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3794:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3805:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3790:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3790:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3743:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3743:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3743:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3669:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3681:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3692:4:6",
                "type": ""
              }
            ],
            "src": "3605:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3992:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4014:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4025:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4010:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4002:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4049:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4060:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4045:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4045:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4068:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4074:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4064:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4064:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4038:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4038:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4038:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4094:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4228:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4102:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4102:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4094:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3972:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3987:4:6",
                "type": ""
              }
            ],
            "src": "3821:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4359:34:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4369:18:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4384:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4369:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4331:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4336:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4347:11:6",
                "type": ""
              }
            ],
            "src": "4246:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4495:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4512:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4505:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4505:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4505:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4533:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4552:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4557:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4548:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4548:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4533:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4467:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4472:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4483:11:6",
                "type": ""
              }
            ],
            "src": "4399:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4619:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4629:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4658:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4640:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4640:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4629:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4601:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4611:7:6",
                "type": ""
              }
            ],
            "src": "4574:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4718:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4728:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4753:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4746:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4746:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4739:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4739:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4728:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4700:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4710:7:6",
                "type": ""
              }
            ],
            "src": "4676:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4817:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4827:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4842:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4849:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4838:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4838:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4827:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4799:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4809:7:6",
                "type": ""
              }
            ],
            "src": "4772:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4949:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4959:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4970:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4959:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4931:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4941:7:6",
                "type": ""
              }
            ],
            "src": "4904:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5093:58:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5115:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5123:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5111:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5111:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5127:16:6",
                        "type": "",
                        "value": "err paying eth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5104:40:6"
                }
              ]
            },
            "name": "store_literal_in_memory_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5085:6:6",
                "type": ""
              }
            ],
            "src": "4987:164:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5263:8:6",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5255:6:6",
                "type": ""
              }
            ],
            "src": "5157:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5320:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5377:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5386:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5389:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5379:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5379:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5379:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5343:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5368:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5350:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5350:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5340:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5340:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5333:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5330:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5313:5:6",
                "type": ""
              }
            ],
            "src": "5277:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5445:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5499:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5508:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5511:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5501:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5501:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5501:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5468:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5490:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5475:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5475:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5465:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5465:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5458:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5458:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5455:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5438:5:6",
                "type": ""
              }
            ],
            "src": "5405:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5570:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5627:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5636:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5639:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5629:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5629:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5629:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5593:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5618:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5600:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5600:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5590:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5590:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5583:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5583:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5580:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5563:5:6",
                "type": ""
              }
            ],
            "src": "5527:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79(memPtr) {\n\n        mstore(add(memPtr, 0), \"err paying eth\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "132:1117:5:-:0;;;252:22;;;;;;;;;;132:1117;;;;;;",
  "deployedSourceMap": "132:1117:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;280:732;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;154:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1018:229;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;280:732;380:7;406:10;:25;417:13;406:25;;;;;;;;;;;;;;;;;;;;;;;;;403:603;;;453:12;:27;466:13;453:27;;;;;;;;;;;;;;;;;;;;;;;;;446:34;;;;403:603;509:11;529:13;509:34;;557:28;609:13;596:27;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;557:67;;639:5;:18;;;658:10;670:20;692:12;639:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;720:12;746:20;738:34;;780:9;738:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:75;;;816:7;808:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;887:20;857:12;:27;870:13;857:27;;;;;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;949:4;921:10;:25;932:13;921:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;975:20;968:27;;;;;280:732;;;;;:::o;154:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;200:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1018:229::-;1089:7;1110:10;:25;1121:13;1110:25;;;;;;;;;;;;;;;;;;;;;;;;;1107:134;;;1157:12;:27;1170:13;1157:27;;;;;;;;;;;;;;;;;;;;;;;;;1150:34;;;;1107:134;1222:8;;;1018:229;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;499:6;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;776:6;784;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:278::-;1188:6;1237:2;1225:9;1216:7;1212:23;1208:32;1205:2;;;1253:1;1250;1243:12;1205:2;1296:1;1321:61;1374:7;1365:6;1354:9;1350:22;1321:61;:::i;:::-;1311:71;;1267:125;1195:204;;;;:::o;1405:118::-;1492:24;1510:5;1492:24;:::i;:::-;1487:3;1480:37;1470:53;;:::o;1529:109::-;1610:21;1625:5;1610:21;:::i;:::-;1605:3;1598:34;1588:50;;:::o;1644:366::-;1786:3;1807:67;1871:2;1866:3;1807:67;:::i;:::-;1800:74;;1883:93;1972:3;1883:93;:::i;:::-;2001:2;1996:3;1992:12;1985:19;;1790:220;;;:::o;2016:398::-;2175:3;2196:83;2277:1;2272:3;2196:83;:::i;:::-;2189:90;;2288:93;2377:3;2288:93;:::i;:::-;2406:1;2401:3;2397:11;2390:18;;2179:235;;;:::o;2420:118::-;2507:24;2525:5;2507:24;:::i;:::-;2502:3;2495:37;2485:53;;:::o;2544:379::-;2728:3;2750:147;2893:3;2750:147;:::i;:::-;2743:154;;2914:3;2907:10;;2732:191;;;:::o;2929:222::-;3022:4;3060:2;3049:9;3045:18;3037:26;;3073:71;3141:1;3130:9;3126:17;3117:6;3073:71;:::i;:::-;3027:124;;;;:::o;3157:442::-;3306:4;3344:2;3333:9;3329:18;3321:26;;3357:71;3425:1;3414:9;3410:17;3401:6;3357:71;:::i;:::-;3438:72;3506:2;3495:9;3491:18;3482:6;3438:72;:::i;:::-;3520;3588:2;3577:9;3573:18;3564:6;3520:72;:::i;:::-;3311:288;;;;;;:::o;3605:210::-;3692:4;3730:2;3719:9;3715:18;3707:26;;3743:65;3805:1;3794:9;3790:17;3781:6;3743:65;:::i;:::-;3697:118;;;;:::o;3821:419::-;3987:4;4025:2;4014:9;4010:18;4002:26;;4074:9;4068:4;4064:20;4060:1;4049:9;4045:17;4038:47;4102:131;4228:4;4102:131;:::i;:::-;4094:139;;3992:248;;;:::o;4246:147::-;4347:11;4384:3;4369:18;;4359:34;;;;:::o;4399:169::-;4483:11;4517:6;4512:3;4505:19;4557:4;4552:3;4548:14;4533:29;;4495:73;;;;:::o;4574:96::-;4611:7;4640:24;4658:5;4640:24;:::i;:::-;4629:35;;4619:51;;;:::o;4676:90::-;4710:7;4753:5;4746:13;4739:21;4728:32;;4718:48;;;:::o;4772:126::-;4809:7;4849:42;4842:5;4838:54;4827:65;;4817:81;;;:::o;4904:77::-;4941:7;4970:5;4959:16;;4949:32;;;:::o;4987:164::-;5127:16;5123:1;5115:6;5111:14;5104:40;5093:58;:::o;5157:114::-;5263:8;:::o;5277:122::-;5350:24;5368:5;5350:24;:::i;:::-;5343:5;5340:35;5330:2;;5389:1;5386;5379:12;5330:2;5320:79;:::o;5405:116::-;5475:21;5490:5;5475:21;:::i;:::-;5468:5;5465:32;5455:2;;5511:1;5508;5501:12;5455:2;5445:76;:::o;5527:122::-;5600:24;5618:5;5600:24;:::i;:::-;5593:5;5590:35;5580:2;;5639:1;5636;5629:12;5580:2;5570:79;:::o",
  "source": "pragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./Exchange.sol\";\n\n// 500000000000000000000\ncontract Factory{\n    mapping(address=>bool) public registered;\n    mapping(address=>address) public exchangeBank;\n\n    constructor() {\n\n    }\n\n    function createExchange(address token_address, uint256 initial_pool) public payable\n        returns(address)\n    {\n        if(registered[token_address]){\n            return exchangeBank[token_address];\n        }else{\n            ERC20 token = ERC20(token_address);\n            address new_exchange_address = address(new Exchange(token_address));\n\n            token.transferFrom(msg.sender, new_exchange_address, initial_pool);\n            (bool success, ) = payable(new_exchange_address).call{value: msg.value}(\"\");\n            require(success, \"err paying eth\");\n\n            exchangeBank[token_address] = new_exchange_address;\n            registered[token_address] = true;\n\n            return new_exchange_address;\n        }\n    }\n\n    function get_token_exchange(address token_address) public view returns(address){\n        if(registered[token_address]){\n            return exchangeBank[token_address];\n        }\n        else{\n            revert();\n        }\n    }\n}",
  "sourcePath": "/home/will/dev/defi_test/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        710
      ],
      "ERC20": [
        585
      ],
      "Exchange": [
        928
      ],
      "Factory": [
        1045
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ]
    },
    "id": 1046,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 930,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1046,
        "sourceUnit": 586,
        "src": "25:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1046,
        "sourceUnit": 929,
        "src": "81:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          928
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1045,
        "linearizedBaseContracts": [
          1045
        ],
        "name": "Factory",
        "nameLocation": "141:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b2dd5c07",
            "id": 936,
            "mutability": "mutable",
            "name": "registered",
            "nameLocation": "184:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 1045,
            "src": "154:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 935,
              "keyType": {
                "id": 933,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "162:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "154:22:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 934,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "171:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d66f7e2c",
            "id": 940,
            "mutability": "mutable",
            "name": "exchangeBank",
            "nameLocation": "233:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1045,
            "src": "200:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 939,
              "keyType": {
                "id": 937,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "200:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 938,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "217:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "266:8:5",
              "statements": []
            },
            "id": 944,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:2:5"
            },
            "returnParameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:5"
            },
            "scope": 1045,
            "src": "252:22:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "393:619:5",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 953,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "406:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 955,
                    "indexExpression": {
                      "id": 954,
                      "name": "token_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "417:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "406:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1020,
                    "nodeType": "Block",
                    "src": "495:511:5",
                    "statements": [
                      {
                        "assignments": [
                          963
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 963,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "515:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1020,
                            "src": "509:11:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$585",
                              "typeString": "contract ERC20"
                            },
                            "typeName": {
                              "id": 962,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 961,
                                "name": "ERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 585,
                                "src": "509:5:5"
                              },
                              "referencedDeclaration": 585,
                              "src": "509:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$585",
                                "typeString": "contract ERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 967,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 965,
                              "name": "token_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "529:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 964,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "523:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "523:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$585",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "509:34:5"
                      },
                      {
                        "assignments": [
                          969
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 969,
                            "mutability": "mutable",
                            "name": "new_exchange_address",
                            "nameLocation": "565:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1020,
                            "src": "557:28:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "557:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 978,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 975,
                                  "name": "token_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "609:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "596:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$returns$_t_contract$_Exchange_$928_$",
                                  "typeString": "function (address) payable returns (contract Exchange)"
                                },
                                "typeName": {
                                  "id": 973,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 972,
                                    "name": "Exchange",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 928,
                                    "src": "600:8:5"
                                  },
                                  "referencedDeclaration": 928,
                                  "src": "600:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exchange_$928",
                                    "typeString": "contract Exchange"
                                  }
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "596:27:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$928",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$928",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "588:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 970,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "588:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "588:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "557:67:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 982,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "658:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "658:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 984,
                              "name": "new_exchange_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "670:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 985,
                              "name": "initial_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "692:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 979,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "639:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$585",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 199,
                            "src": "639:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:66:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 987,
                        "nodeType": "ExpressionStatement",
                        "src": "639:66:5"
                      },
                      {
                        "assignments": [
                          989,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 989,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "725:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1020,
                            "src": "720:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 988,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "720:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1000,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "791:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 992,
                                    "name": "new_exchange_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 969,
                                    "src": "746:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "738:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 990,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "738:8:5",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "738:29:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "738:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 995,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "780:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "780:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "738:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "719:75:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1002,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "816:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "65727220706179696e6720657468",
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "825:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79",
                                "typeString": "literal_string \"err paying eth\""
                              },
                              "value": "err paying eth"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14db339a140729bbfe4c5ae18e3f38aeda6de92846ae2b4fd491768d3dbd7d79",
                                "typeString": "literal_string \"err paying eth\""
                              }
                            ],
                            "id": 1001,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "808:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "808:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "808:34:5"
                      },
                      {
                        "expression": {
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1006,
                              "name": "exchangeBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "857:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1008,
                            "indexExpression": {
                              "id": 1007,
                              "name": "token_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "870:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "857:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1009,
                            "name": "new_exchange_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "887:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "857:50:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1011,
                        "nodeType": "ExpressionStatement",
                        "src": "857:50:5"
                      },
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1012,
                              "name": "registered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "921:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1014,
                            "indexExpression": {
                              "id": 1013,
                              "name": "token_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "932:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "921:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "949:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "921:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:5"
                      },
                      {
                        "expression": {
                          "id": 1018,
                          "name": "new_exchange_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "975:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 952,
                        "id": 1019,
                        "nodeType": "Return",
                        "src": "968:27:5"
                      }
                    ]
                  },
                  "id": 1021,
                  "nodeType": "IfStatement",
                  "src": "403:603:5",
                  "trueBody": {
                    "id": 960,
                    "nodeType": "Block",
                    "src": "432:59:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 956,
                            "name": "exchangeBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "453:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 958,
                          "indexExpression": {
                            "id": 957,
                            "name": "token_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "466:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "453:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 952,
                        "id": 959,
                        "nodeType": "Return",
                        "src": "446:34:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "433c817c",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "289:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "312:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "304:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "initial_pool",
                  "nameLocation": "335:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "327:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "303:45:5"
            },
            "returnParameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "380:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "379:9:5"
            },
            "scope": 1045,
            "src": "280:732:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "1097:150:5",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1030,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "1110:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1032,
                    "indexExpression": {
                      "id": 1031,
                      "name": "token_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "1121:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1110:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1041,
                    "nodeType": "Block",
                    "src": "1208:33:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1038,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1222:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1040,
                        "nodeType": "ExpressionStatement",
                        "src": "1222:8:5"
                      }
                    ]
                  },
                  "id": 1042,
                  "nodeType": "IfStatement",
                  "src": "1107:134:5",
                  "trueBody": {
                    "id": 1037,
                    "nodeType": "Block",
                    "src": "1136:59:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1033,
                            "name": "exchangeBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "1157:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1035,
                          "indexExpression": {
                            "id": 1034,
                            "name": "token_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "1170:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1157:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1029,
                        "id": 1036,
                        "nodeType": "Return",
                        "src": "1150:34:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e1ac499f",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_token_exchange",
            "nameLocation": "1027:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "1054:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "1046:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:23:5"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "1089:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1088:9:5"
            },
            "scope": 1045,
            "src": "1018:229:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1046,
        "src": "132:1117:5",
        "usedErrors": []
      }
    ],
    "src": "0:1249:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5527829C490b8E13E46Dc62c43a3F81F7d78Dd61",
      "transactionHash": "0xbd600ee24282fba4e9f4e303332593d158dcb2ace3970aec8388710f04eb8b4a"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-02T15:06:12.110Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}